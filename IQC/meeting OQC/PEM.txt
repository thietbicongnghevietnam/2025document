{
    "statusCode": "10000",
    "message": "success",
    "data": [
        {
            "line_name": "1M",
            "ng_type_name": "Monitor",
            "step_name": "M-KEY CHECK",
            "model_name": "VL-SE30XLA-V4",
            "ng_reason": "Function check NG",
            "id": 2376,
            "line_id": 51,
            "model_id": 22,
            "fa_ng_reason_id": 60,
            "fa_line_step_id": 10,
            "is_ng": true,
            "quantity": 1,
            "remark": "PNLPMV26KL1VA",
            "creator_id": 2005315,
            "modifier_id": 2005315,
            "create_time": "2024-10-02T17:06:42.598Z",
            "update_time": "2024-10-02T17:06:42.598Z",
            "delete_time": null,
            "serial": "",
            "ng_type_id": 1
        },
        {
            "line_name": "1M",
            "ng_type_name": "Monitor",
            "step_name": "M-FUNCTION",
            "model_name": "VL-SE30XLA-V4",
            "ng_reason": "No sound",
            "id": 2377,
            "line_id": 51,
            "model_id": 22,
            "fa_ng_reason_id": 52,
            "fa_line_step_id": 8,
            "is_ng": true,
            "quantity": 1,
            "remark": "LOA CAM(LOA 87)",
            "creator_id": 2005315,
            "modifier_id": 2005315,
            "create_time": "2024-10-03T00:41:09.696Z",
            "update_time": "2024-10-04T00:00:55.862Z",
            "delete_time": null,
            "serial": "",
            "ng_type_id": 1
        },
        {
            "line_name": "1M",
            "ng_type_name": "Monitor",
            "step_name": "M-FUNCTION",
            "model_name": "VL-SE30XLA-V4",
            "ng_reason": "Noise LCD / Image",
            "id": 2384,
            "line_id": 51,
            "model_id": 22,
            "fa_ng_reason_id": 47,
            "fa_line_step_id": 8,
            "is_ng": true,
            "quantity": 1,
            "remark": "MAN HINH NHIEU(PNLPMV26KL1VA)",
            "creator_id": 2005315,
            "modifier_id": 2005315,
            "create_time": "2024-10-03T05:56:48.358Z",
            "update_time": "2024-10-04T00:01:23.055Z",
            "delete_time": null,
            "serial": "",
            "ng_type_id": 1
        }
    ]
}

//API 1 // using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.Net.Http;
using System.Net.Http.Headers;

using Newtonsoft.Json;
using System.Data.SqlClient;

namespace CallAPI
{
    class Program
    {
        private static readonly HttpClient client = new HttpClient();
        public static async Task Main(string[] args) // Định nghĩa Main là async
        {
            string startDate = "2024-10-01+06:00:00"; // Ví dụ: ngày bắt đầu
            string endDate = "2024-10-03+15:00:00"; // Ví dụ: ngày kết thúc
            string lineName = "all"; // Ví dụ: tên dòng  1M

            string apiUrl = $"http://192.168.128.128:8080/api/external/fa-ng?startDate={Uri.EscapeDataString(startDate)}&endDate={Uri.EscapeDataString(endDate)}&lineName={Uri.EscapeDataString(lineName)}";
            //string apiUrl = "http://192.168.128.128:8080/api/external/fa-ng"; // Thay thế bằng URL API của bạn
            string connectionString = "YOUR_CONNECTION_STRING_HERE"; // Thay thế bằng chuỗi kết nối của bạn

            try
            {
                var response = await client.GetAsync(apiUrl);
                response.EnsureSuccessStatusCode(); // Ném ra ngoại lệ nếu không thành công

                var jsonResponse = await response.Content.ReadAsStringAsync();
                var apiResponse = JsonConvert.DeserializeObject<ApiResponse>(jsonResponse);

                //// In dữ liệu để kiểm tra
                //Console.WriteLine($"Status Code: {apiResponse.StatusCode}");
                //Console.WriteLine($"Message: {apiResponse.Message}");
                //foreach (var data in apiResponse.Data)
                //{
                //    Console.WriteLine($"Line Name: {data.LineName}, NG Reason: {data.NgReason}, Quantity: {data.Quantity}");
                //}

                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    await connection.OpenAsync();

                    foreach (var data in apiResponse.Data)
                    {
                        var command = new SqlCommand(
                            "INSERT INTO DM_FA_NG (LineName, NgTypeName, StepName, ModelName, NgReason, Quantity, Remark, CreateTime, UpdateTime) " +
                            "VALUES (@LineName, @NgTypeName, @StepName, @ModelName, @NgReason, @Quantity, @Remark, @CreateTime, @UpdateTime)", connection);

                        command.Parameters.AddWithValue("@LineName", data.LineName);
                        command.Parameters.AddWithValue("@NgTypeName", data.NgTypeName);
                        command.Parameters.AddWithValue("@StepName", data.StepName);
                        command.Parameters.AddWithValue("@ModelName", data.ModelName);
                        command.Parameters.AddWithValue("@NgReason", data.NgReason);
                        command.Parameters.AddWithValue("@Quantity", data.Quantity);
                        command.Parameters.AddWithValue("@Remark", data.Remark);
                        command.Parameters.AddWithValue("@CreateTime", data.CreateTime);
                        command.Parameters.AddWithValue("@UpdateTime", data.UpdateTime);

                        await command.ExecuteNonQueryAsync(); // Thực hiện lệnh chèn
                    }
                }

                Console.WriteLine("Dữ liệu đã được lưu vào cơ sở dữ liệu.");
            }
            
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
        }

        public class ApiResponse
        {
            public string StatusCode { get; set; }
            public string Message { get; set; }
            public DataItem[] Data { get; set; }
        }

        public class DataItem
        {
            public string LineName { get; set; }
            public string NgTypeName { get; set; }
            public string StepName { get; set; }
            public string ModelName { get; set; }
            public string NgReason { get; set; }
            public int Id { get; set; }
            public int LineId { get; set; }
            public int ModelId { get; set; }
            public int FaNgReasonId { get; set; }
            public int FaLineStepId { get; set; }
            public bool IsNg { get; set; }
            public int Quantity { get; set; }
            public string Remark { get; set; }
            public int CreatorId { get; set; }
            public int ModifierId { get; set; }
            public DateTime CreateTime { get; set; }
            public DateTime UpdateTime { get; set; }
            public DateTime? DeleteTime { get; set; }
            public string Serial { get; set; }
            public int NgTypeId { get; set; }
        }


    }
}
============================== API 2 //

public class Program
{
    private static readonly HttpClient client = new HttpClient();

    public static async Task Main(string[] args)
    {
        // Định nghĩa URL với tham số lineName
        string lineName = "1M"; // Thay đổi nếu cần
        string apiUrl = $"http://192.168.128.128:8080/api/external/fa-4m-status?lineName={Uri.EscapeDataString(lineName)}";

        string connectionString = "YOUR_CONNECTION_STRING_HERE"; // Thay thế bằng chuỗi kết nối của bạn

        try
        {
            // Gửi yêu cầu GET
            var response = await client.GetAsync(apiUrl);
            response.EnsureSuccessStatusCode(); // Ném ra ngoại lệ nếu không thành công

            // Đọc nội dung phản hồi
            var jsonResponse = await response.Content.ReadAsStringAsync();
            var apiResponse = JsonConvert.DeserializeObject<ApiResponse>(jsonResponse);

            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                await connection.OpenAsync();

                var command = new SqlCommand(
                    "INSERT INTO YourTableName (StatusCode, Message, Machine, Method, Material, Man) " +
                    "VALUES (@StatusCode, @Message, @Machine, @Method, @Material, @Man)", connection);

                command.Parameters.AddWithValue("@StatusCode", apiResponse.StatusCode);
                command.Parameters.AddWithValue("@Message", apiResponse.Message);
                command.Parameters.AddWithValue("@Machine", apiResponse.Data.Machine);
                command.Parameters.AddWithValue("@Method", apiResponse.Data.Method);
                command.Parameters.AddWithValue("@Material", apiResponse.Data.Material);
                command.Parameters.AddWithValue("@Man", apiResponse.Data.Man);

                await command.ExecuteNonQueryAsync(); // Thực hiện lệnh chèn
            }

            Console.WriteLine("Dữ liệu đã được lưu vào cơ sở dữ liệu.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}

public class ApiResponse
{
    public string StatusCode { get; set; }
    public string Message { get; set; }
    public DataItem Data { get; set; }
}

public class DataItem
{
    public bool Machine { get; set; }
    public bool Method { get; set; }
    public bool Material { get; set; }
    public bool Man { get; set; }
}

========================= // bang moi //=========
CREATE TABLE [dbo].[DM_4M](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[Machine] [nvarchar](10) NULL,
	[Method] [nvarchar](10) NULL,
	[Material] [nvarchar](10) NULL,
	[Man] [nvarchar](10) NULL,
	[LineName] [nvarchar](10) NULL,
	[Createtime] [datetime] NULL,
	[Updatetime] [datetime] NULL
)
CREATE TABLE [dbo].[DM_FA_NG](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[LineName] [nvarchar](50) NULL,
	[NgTypeName] [nvarchar](50) NULL,
	[StepName] [nvarchar](50) NULL,
	[ModelName] [nvarchar](50) NULL,
	[NgReason] [nvarchar](50) NULL,
	[Quantity] [nvarchar](50) NULL,
	[Remark] [nvarchar](50) NULL,
	[CreateTime] [datetime] NULL,
	[UpdateTime] [datetime] NULL,
	[is_ng] [nvarchar](10) NULL,
	[serial] [nvarchar](50) NULL,
	[startDate] [datetime] NULL,
	[endDate] [datetime] NULL
)

